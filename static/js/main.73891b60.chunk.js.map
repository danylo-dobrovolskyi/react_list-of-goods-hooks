{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","resetButton","sortByAlphabet","ALPHABET","sortLength","LENGTH","goods","visibleGoods","sort","a","b","localeCompare","length","Error","reverse","getReorderedGoods","className","type","classNames","onClick","isCurrentReversed","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAuCE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAcF,IAAaP,EAASM,MAAQF,EAC5CM,EAAiBH,IAAaP,EAASW,SACvCC,EAAaL,IAAaP,EAASa,OAEnCC,EApCD,SACLA,EADK,GAGJ,IADCP,EACF,EADEA,SAAUH,EACZ,EADYA,WAENW,EAAY,YAAOD,GAEzB,OAAQP,GACN,KAAKP,EAASW,SACZI,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MAEF,KAAKlB,EAASa,OACZE,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UACzC,MAEF,KAAKpB,EAASM,KACZ,MAEF,QAAS,MAAM,IAAIe,MAAM,mBAO3B,OAJIjB,GACFW,EAAaO,UAGRP,EAWOQ,CAAkBtB,EAAiB,CAC/CM,WACAH,eAoBF,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CACtC,YAAahB,IAEfiB,QAzBmB,WACzBnB,EAAYR,EAASW,WAmBjB,iCAUA,wBACEc,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,YAAad,IAEfe,QA/Ba,WACnBnB,EAAYR,EAASa,SAyBjB,4BAUA,wBACEY,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,YAAatB,IAEfuB,QArCc,WACpBtB,GAAc,SAAAuB,GAAiB,OAAKA,MA+BhC,qBAUCnB,GACC,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QA1CI,WACZtB,GAAc,GACdG,EAAYR,EAASM,OAqCf,sBAUJ,6BACGQ,EAAMe,KAAI,SAACC,GAAD,OACT,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YClInBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.73891b60.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n\n    case SortType.NONE:\n      break;\n\n    default: throw new Error('Wrong sort type');\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const resetButton = sortType !== SortType.NONE || isReversed;\n  const sortByAlphabet = sortType === SortType.ALPHABET;\n  const sortLength = sortType === SortType.LENGTH;\n\n  const goods = getReorderedGoods(goodsFromServer, {\n    sortType,\n    isReversed,\n  });\n\n  const sortAlphabetically = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const sortInReverse = () => {\n    setIsReversed(isCurrentReversed => !isCurrentReversed);\n  };\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button is-info', {\n            'is-light': !sortByAlphabet,\n          })}\n          onClick={sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-success', {\n            'is-light': !sortLength,\n          })}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={sortInReverse}\n        >\n          Reverse\n        </button>\n\n        {resetButton && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map((good) => (\n          <li key={good} data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}